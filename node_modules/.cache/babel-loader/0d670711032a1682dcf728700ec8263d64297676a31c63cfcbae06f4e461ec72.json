{"ast":null,"code":"var _jsxFileName = \"/Volumes/MacM2/repositorios/json-creator/src/FlowView.tsx\";\nimport React from 'react';\nimport ReactFlow, { MiniMap, Controls, Background } from 'react-flow-renderer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodeColors = ['#e3f2fd',\n// light blue\n'#ffe0b2',\n// light orange\n'#c8e6c9',\n// light green\n'#f8bbd0',\n// light pink\n'#fff9c4',\n// light yellow\n'#d1c4e9',\n// light purple\n'#b2dfdb' // light teal\n];\nconst getNodesAndEdges = (steps, selectedStepId) => {\n  const nodes = steps.map((step, idx) => {\n    const isSelected = step.id === selectedStepId;\n    const baseColor = nodeColors[idx % nodeColors.length];\n    return {\n      id: step.id,\n      data: {\n        label: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: isSelected ? 800 : 500,\n            color: isSelected ? '#ff9800' : '#1976d2',\n            fontSize: isSelected ? 18 : 15,\n            letterSpacing: 1\n          },\n          children: `${step.order}. ${step.type}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      },\n      position: {\n        x: 100,\n        y: idx * 100\n      },\n      style: {\n        minWidth: 200,\n        padding: 12,\n        borderRadius: 10,\n        border: isSelected ? '4px dashed #ff9800' : '2px solid #90caf9',\n        background: isSelected ? '#fffbe6' : baseColor,\n        boxShadow: isSelected ? '0 0 0 6px #ff980088' : '0 1px 4px #bbb8',\n        animation: isSelected ? 'blinker 0.9s linear infinite' : undefined,\n        transition: 'border 0.2s, box-shadow 0.2s, background 0.2s',\n        zIndex: isSelected ? 10 : 1\n      }\n    };\n  });\n  const edges = steps.slice(1).map((step, idx) => ({\n    id: `e${steps[idx].id}-${step.id}`,\n    source: steps[idx].id,\n    target: step.id,\n    animated: true,\n    style: {\n      stroke: '#1976d2',\n      strokeWidth: 2\n    }\n  }));\n  return {\n    nodes,\n    edges\n  };\n};\nconst phaseColors = ['rgba(33,150,243,0.10)',\n// blue\n'rgba(255,152,0,0.10)',\n// orange\n'rgba(76,175,80,0.10)',\n// green\n'rgba(233,30,99,0.10)',\n// pink\n'rgba(255,235,59,0.15)',\n// yellow\n'rgba(156,39,176,0.10)',\n// purple\n'rgba(0,150,136,0.10)' // teal\n];\nconst FlowView = ({\n  steps,\n  selectedStepId,\n  stepsByPhase\n}) => {\n  // Grouping logic: if stepsByPhase provided, use it, else fall back to flat steps\n  let grouped = [];\n  if (stepsByPhase) {\n    grouped = Object.entries(stepsByPhase).sort(([a], [b]) => Number(a) - Number(b)).map(([phase, steps]) => ({\n      phase,\n      steps\n    }));\n  } else {\n    grouped = [{\n      phase: '1',\n      steps\n    }];\n  }\n\n  // Calculate nodes and edges for all steps\n  const allSteps = grouped.flatMap(g => g.steps);\n  const {\n    nodes,\n    edges\n  } = getNodesAndEdges(allSteps, selectedStepId);\n\n  // Calculate y positions for phase backgrounds\n  let yOffset = 0;\n  const phaseRects = grouped.map((g, idx) => {\n    const height = Math.max(1, g.steps.length) * 100 - 20;\n    const rect = {\n      y: yOffset,\n      height,\n      color: phaseColors[idx % phaseColors.length],\n      label: `Fase ${g.phase}`\n    };\n    yOffset += height + 20;\n    return rect;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '60vh',\n      minHeight: 400,\n      width: '100%',\n      background: '#f4f6fb',\n      borderRadius: 8,\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        @keyframes blinker {\n          50% { border-color: #fff; box-shadow: 0 0 0 8px #ff980044; }\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"100%\",\n      height: \"100%\",\n      style: {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        zIndex: 0,\n        pointerEvents: 'none'\n      },\n      children: phaseRects.map((rect, idx) => /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n          x: 30,\n          y: rect.y + 30,\n          width: 320,\n          height: rect.height,\n          rx: 24,\n          fill: rect.color,\n          stroke: rect.color.replace('0.10', '0.35'),\n          strokeWidth: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: 40,\n          y: rect.y + 52,\n          fontSize: 18,\n          fontWeight: 700,\n          fill: \"#555\",\n          style: {\n            textShadow: '0 2px 8px #fff'\n          },\n          children: rect.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      fitView: true,\n      fitViewOptions: {\n        padding: 0.2\n      },\n      minZoom: 0.2,\n      maxZoom: 2,\n      children: [/*#__PURE__*/_jsxDEV(MiniMap, {\n        nodeColor: () => '#1976d2'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Background, {\n        gap: 16,\n        color: \"#e3e3e3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_c = FlowView;\nexport default FlowView;\nvar _c;\n$RefreshReg$(_c, \"FlowView\");","map":{"version":3,"names":["React","ReactFlow","MiniMap","Controls","Background","jsxDEV","_jsxDEV","nodeColors","getNodesAndEdges","steps","selectedStepId","nodes","map","step","idx","isSelected","id","baseColor","length","data","label","style","fontWeight","color","fontSize","letterSpacing","children","order","type","fileName","_jsxFileName","lineNumber","columnNumber","position","x","y","minWidth","padding","borderRadius","border","background","boxShadow","animation","undefined","transition","zIndex","edges","slice","source","target","animated","stroke","strokeWidth","phaseColors","FlowView","stepsByPhase","grouped","Object","entries","sort","a","b","Number","phase","allSteps","flatMap","g","yOffset","phaseRects","height","Math","max","rect","minHeight","width","left","top","pointerEvents","rx","fill","replace","textShadow","fitView","fitViewOptions","minZoom","maxZoom","nodeColor","gap","_c","$RefreshReg$"],"sources":["/Volumes/MacM2/repositorios/json-creator/src/FlowView.tsx"],"sourcesContent":["import React from 'react';\nimport ReactFlow, { MiniMap, Controls, Background, Node, Edge } from 'react-flow-renderer';\nimport { Step } from './models';\n\ninterface FlowViewProps {\n  steps: Step[];\n  selectedStepId?: string;\n  stepsByPhase?: Record<string, Step[]>;\n}\n\nconst nodeColors = [\n  '#e3f2fd', // light blue\n  '#ffe0b2', // light orange\n  '#c8e6c9', // light green\n  '#f8bbd0', // light pink\n  '#fff9c4', // light yellow\n  '#d1c4e9', // light purple\n  '#b2dfdb', // light teal\n];\n\nconst getNodesAndEdges = (steps: Step[], selectedStepId?: string): { nodes: Node[]; edges: Edge[] } => {\n  const nodes: Node[] = steps.map((step, idx) => {\n    const isSelected = step.id === selectedStepId;\n    const baseColor = nodeColors[idx % nodeColors.length];\n    return {\n      id: step.id,\n      data: {\n        label: (\n          <span style={{\n            fontWeight: isSelected ? 800 : 500,\n            color: isSelected ? '#ff9800' : '#1976d2',\n            fontSize: isSelected ? 18 : 15,\n            letterSpacing: 1,\n          }}>{`${step.order}. ${step.type}`}</span>\n        )\n      },\n      position: { x: 100, y: idx * 100 },\n      style: {\n        minWidth: 200,\n        padding: 12,\n        borderRadius: 10,\n        border: isSelected\n          ? '4px dashed #ff9800'\n          : '2px solid #90caf9',\n        background: isSelected ? '#fffbe6' : baseColor,\n        boxShadow: isSelected ? '0 0 0 6px #ff980088' : '0 1px 4px #bbb8',\n        animation: isSelected ? 'blinker 0.9s linear infinite' : undefined,\n        transition: 'border 0.2s, box-shadow 0.2s, background 0.2s',\n        zIndex: isSelected ? 10 : 1,\n      },\n    };\n  });\n  const edges: Edge[] = steps.slice(1).map((step, idx) => ({\n    id: `e${steps[idx].id}-${step.id}`,\n    source: steps[idx].id,\n    target: step.id,\n    animated: true,\n    style: { stroke: '#1976d2', strokeWidth: 2 }\n  }));\n  return { nodes, edges };\n};\n\nconst phaseColors = [\n  'rgba(33,150,243,0.10)', // blue\n  'rgba(255,152,0,0.10)', // orange\n  'rgba(76,175,80,0.10)', // green\n  'rgba(233,30,99,0.10)', // pink\n  'rgba(255,235,59,0.15)', // yellow\n  'rgba(156,39,176,0.10)', // purple\n  'rgba(0,150,136,0.10)', // teal\n];\n\nconst FlowView: React.FC<FlowViewProps> = ({ steps, selectedStepId, stepsByPhase }) => {\n  // Grouping logic: if stepsByPhase provided, use it, else fall back to flat steps\n  let grouped: Array<{ phase: string; steps: Step[] }> = [];\n  if (stepsByPhase) {\n    grouped = Object.entries(stepsByPhase)\n      .sort(([a], [b]) => Number(a) - Number(b))\n      .map(([phase, steps]) => ({ phase, steps }));\n  } else {\n    grouped = [{ phase: '1', steps }];\n  }\n\n  // Calculate nodes and edges for all steps\n  const allSteps = grouped.flatMap(g => g.steps);\n  const { nodes, edges } = getNodesAndEdges(allSteps, selectedStepId);\n\n  // Calculate y positions for phase backgrounds\n  let yOffset = 0;\n  const phaseRects = grouped.map((g, idx) => {\n    const height = Math.max(1, g.steps.length) * 100 - 20;\n    const rect = {\n      y: yOffset,\n      height,\n      color: phaseColors[idx % phaseColors.length],\n      label: `Fase ${g.phase}`,\n    };\n    yOffset += height + 20;\n    return rect;\n  });\n\n  return (\n    <div style={{ height: '60vh', minHeight: 400, width: '100%', background: '#f4f6fb', borderRadius: 8, position: 'relative' }}>\n      <style>{`\n        @keyframes blinker {\n          50% { border-color: #fff; box-shadow: 0 0 0 8px #ff980044; }\n        }\n      `}</style>\n      {/* SVG backgrounds for phases */}\n      <svg\n        width=\"100%\"\n        height=\"100%\"\n        style={{ position: 'absolute', left: 0, top: 0, zIndex: 0, pointerEvents: 'none' }}\n      >\n        {phaseRects.map((rect, idx) => (\n          <g key={idx}>\n            <rect\n              x={30}\n              y={rect.y + 30}\n              width={320}\n              height={rect.height}\n              rx={24}\n              fill={rect.color}\n              stroke={rect.color.replace('0.10', '0.35')}\n              strokeWidth={2}\n            />\n            <text\n              x={40}\n              y={rect.y + 52}\n              fontSize={18}\n              fontWeight={700}\n              fill=\"#555\"\n              style={{ textShadow: '0 2px 8px #fff' }}\n            >\n              {rect.label}\n            </text>\n          </g>\n        ))}\n      </svg>\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        fitView\n        fitViewOptions={{ padding: 0.2 }}\n        minZoom={0.2}\n        maxZoom={2}\n      >\n        <MiniMap nodeColor={() => '#1976d2'} />\n        <Controls />\n        <Background gap={16} color=\"#e3e3e3\" />\n      </ReactFlow>\n    </div>\n  );\n};\n\nexport default FlowView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}