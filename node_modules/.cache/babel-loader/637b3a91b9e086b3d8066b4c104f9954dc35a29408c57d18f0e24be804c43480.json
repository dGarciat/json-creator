{"ast":null,"code":"var _jsxFileName = \"/Volumes/MacM2/repositorios/json-creator/src/FlowView.tsx\";\nimport React from 'react';\nimport ReactFlow, { MiniMap, Controls, Background } from 'react-flow-renderer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getNodesAndEdges = (steps, selectedStepId) => {\n  const nodes = steps.map((step, idx) => {\n    const isSelected = step.id === selectedStepId;\n    return {\n      id: step.id,\n      data: {\n        label: `${step.order}_${step.type}`\n      },\n      position: {\n        x: 100,\n        y: idx * 100\n      },\n      style: {\n        minWidth: 200,\n        padding: 10,\n        borderRadius: 8,\n        border: isSelected ? '3px dashed #ff9800' : '2px solid #1976d2',\n        background: isSelected ? '#fffbe6' : '#fff',\n        boxShadow: isSelected ? '0 0 0 4px #ff980088' : undefined,\n        animation: isSelected ? 'blinker 1s linear infinite' : undefined,\n        transition: 'border 0.2s, box-shadow 0.2s, background 0.2s'\n      }\n    };\n  });\n  const edges = steps.slice(1).map((step, idx) => ({\n    id: `e${steps[idx].id}-${step.id}`,\n    source: steps[idx].id,\n    target: step.id,\n    animated: true,\n    style: {\n      stroke: '#1976d2',\n      strokeWidth: 2\n    }\n  }));\n  return {\n    nodes,\n    edges\n  };\n};\nconst FlowView = ({\n  steps,\n  selectedStepId\n}) => {\n  const {\n    nodes,\n    edges\n  } = getNodesAndEdges(steps, selectedStepId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '60vh',\n      minHeight: 400,\n      width: '100%',\n      background: '#f4f6fb',\n      borderRadius: 8\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        @keyframes blinker {\n          50% { border-color: #fff; box-shadow: 0 0 0 8px #ff980044; }\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      fitView: true,\n      fitViewOptions: {\n        padding: 0.2\n      },\n      minZoom: 0.2,\n      maxZoom: 2,\n      children: [/*#__PURE__*/_jsxDEV(MiniMap, {\n        nodeColor: () => '#1976d2'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Background, {\n        gap: 16,\n        color: \"#e3e3e3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_c = FlowView;\nexport default FlowView;\nvar _c;\n$RefreshReg$(_c, \"FlowView\");","map":{"version":3,"names":["React","ReactFlow","MiniMap","Controls","Background","jsxDEV","_jsxDEV","getNodesAndEdges","steps","selectedStepId","nodes","map","step","idx","isSelected","id","data","label","order","type","position","x","y","style","minWidth","padding","borderRadius","border","background","boxShadow","undefined","animation","transition","edges","slice","source","target","animated","stroke","strokeWidth","FlowView","height","minHeight","width","children","fileName","_jsxFileName","lineNumber","columnNumber","fitView","fitViewOptions","minZoom","maxZoom","nodeColor","gap","color","_c","$RefreshReg$"],"sources":["/Volumes/MacM2/repositorios/json-creator/src/FlowView.tsx"],"sourcesContent":["import React from 'react';\nimport ReactFlow, { MiniMap, Controls, Background, Node, Edge } from 'react-flow-renderer';\nimport { Step } from './models';\n\ninterface FlowViewProps {\n  steps: Step[];\n  selectedStepId?: string;\n}\n\nconst getNodesAndEdges = (steps: Step[], selectedStepId?: string): { nodes: Node[]; edges: Edge[] } => {\n  const nodes: Node[] = steps.map((step, idx) => {\n    const isSelected = step.id === selectedStepId;\n    return {\n      id: step.id,\n      data: { label: `${step.order}_${step.type}` },\n      position: { x: 100, y: idx * 100 },\n      style: {\n        minWidth: 200,\n        padding: 10,\n        borderRadius: 8,\n        border: isSelected\n          ? '3px dashed #ff9800'\n          : '2px solid #1976d2',\n        background: isSelected ? '#fffbe6' : '#fff',\n        boxShadow: isSelected ? '0 0 0 4px #ff980088' : undefined,\n        animation: isSelected ? 'blinker 1s linear infinite' : undefined,\n        transition: 'border 0.2s, box-shadow 0.2s, background 0.2s',\n      },\n    };\n  });\n  const edges: Edge[] = steps.slice(1).map((step, idx) => ({\n    id: `e${steps[idx].id}-${step.id}`,\n    source: steps[idx].id,\n    target: step.id,\n    animated: true,\n    style: { stroke: '#1976d2', strokeWidth: 2 }\n  }));\n  return { nodes, edges };\n};\n\nconst FlowView: React.FC<FlowViewProps> = ({ steps, selectedStepId }) => {\n  const { nodes, edges } = getNodesAndEdges(steps, selectedStepId);\n  return (\n    <div style={{ height: '60vh', minHeight: 400, width: '100%', background: '#f4f6fb', borderRadius: 8 }}>\n      <style>{`\n        @keyframes blinker {\n          50% { border-color: #fff; box-shadow: 0 0 0 8px #ff980044; }\n        }\n      `}</style>\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        fitView\n        fitViewOptions={{ padding: 0.2 }}\n        minZoom={0.2}\n        maxZoom={2}\n      >\n        <MiniMap nodeColor={() => '#1976d2'} />\n        <Controls />\n        <Background gap={16} color=\"#e3e3e3\" />\n      </ReactFlow>\n    </div>\n  );\n};\n\nexport default FlowView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}