{"ast":null,"code":"var _jsxFileName = \"/Volumes/MacM2/repositorios/json-creator/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Typography, Box, Button, Paper, Grid, TextField } from '@mui/material';\nimport FlowView from './FlowView.tsx';\nimport StepConfigEditor from './StepConfigEditor.tsx';\n\n// Mock de steps/componentes disponibles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst availableComponents = [{\n  type: 'checkOracle',\n  label: 'Check Oracle'\n}, {\n  type: 'balanceAndPosition',\n  label: 'Balance & Position'\n}, {\n  type: 'sendYarc',\n  label: 'Send Yarc'\n}, {\n  type: 'manualCrossing',\n  label: 'Manual Crossing'\n}, {\n  type: 'alert',\n  label: 'Alert'\n}, {\n  type: 'cleanData',\n  label: 'Clean Data'\n}];\nfunction App() {\n  _s();\n  var _stepsByPhase$selecte, _stepsByPhase$selecte2, _stepsByPhase$selecte3, _stepsByPhase$selecte4;\n  // Estado para los steps agrupados por fase (steps: Record<string, Step[]>)\n  const [stepsByPhase, setStepsByPhase] = useState({\n    '1': {}\n  });\n  const [selectedPhase, setSelectedPhase] = useState('1');\n  const [selectedStepIdx, setSelectedStepIdx] = useState(null);\n  const [jsonName, setJsonName] = useState('Nuevo JSON de Prueba');\n\n  // Añadir una nueva fase\n  const addPhase = () => {\n    const phaseIds = Object.keys(stepsByPhase).map(Number);\n    const newId = (phaseIds.length > 0 ? Math.max(...phaseIds) + 1 : 1).toString();\n    setStepsByPhase({\n      ...stepsByPhase,\n      [newId]: []\n    });\n    setSelectedPhase(newId);\n    setSelectedStepIdx(null);\n  };\n\n  // Añadir un nuevo step a la fase seleccionada\n  const addStep = type => {\n    const steps = stepsByPhase[selectedPhase] || {};\n    // Obtener el siguiente orden y un id único\n    const order = Object.values(steps).length > 0 ? Math.max(...Object.values(steps).map(s => s.order)) + 1 : 1;\n    const id = `${order.toString().padStart(4, '0')}_${type}`;\n    const newStep = {\n      id,\n      type,\n      order,\n      config: {}\n    };\n    setStepsByPhase({\n      ...stepsByPhase,\n      [selectedPhase]: {\n        ...steps,\n        [id]: newStep\n      }\n    });\n  };\n\n  // Seleccionar step para editar\n  const selectStep = (phase, stepId) => {\n    setSelectedPhase(phase);\n    setSelectedStepIdx(stepId);\n  };\n\n  // Actualizar configuración de un step\n  const updateStepConfig = config => {\n    if (!selectedStepIdx) return;\n    const steps = stepsByPhase[selectedPhase] || {};\n    setStepsByPhase({\n      ...stepsByPhase,\n      [selectedPhase]: {\n        ...steps,\n        [selectedStepIdx]: {\n          ...steps[selectedStepIdx],\n          config\n        }\n      }\n    });\n  };\n\n  // Generar JSON final\n  const generateJson = () => ({\n    name: jsonName,\n    steps: Object.fromEntries(Object.entries(stepsByPhase).map(([phaseId, steps]) => [phaseId, Object.fromEntries(Object.entries(steps).map(([stepId, step]) => [stepId, step.config // Solo el objeto config plano, sin id/type/order/config\n    ]))]))\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      py: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'relative',\n        textAlign: 'center',\n        mt: 2,\n        mb: 3,\n        py: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'absolute',\n          left: '50%',\n          top: '50%',\n          width: 500,\n          height: 120,\n          transform: 'translate(-50%, -50%)',\n          background: 'linear-gradient(90deg, #1976d2cc 0%, #42a5f5cc 100%)',\n          filter: 'blur(32px)',\n          opacity: 0.25,\n          zIndex: 0,\n          borderRadius: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        sx: {\n          fontWeight: 700,\n          color: 'primary.main',\n          textShadow: '0 2px 12px rgba(25,118,210,0.15)',\n          letterSpacing: 1.5,\n          mb: 1,\n          position: 'relative',\n          zIndex: 1\n        },\n        children: \"Generador de JSONs para Pruebas de Integraci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          my: 1,\n          position: 'relative',\n          zIndex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'inline-block',\n            width: '100%',\n            maxWidth: 'min(100%, 700px)',\n            height: 5,\n            bgcolor: 'primary.main',\n            borderRadius: 3,\n            boxShadow: '0 2px 12px rgba(25,118,210,0.18)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Nombre del JSON\",\n          value: jsonName,\n          onChange: e => setJsonName(e.target.value),\n          variant: \"outlined\",\n          size: \"small\",\n          sx: {\n            minWidth: 320,\n            input: {\n              color: 'primary.main',\n              fontWeight: 600,\n              textAlign: 'center'\n            },\n            label: {\n              color: 'primary.light'\n            },\n            '.MuiOutlinedInput-root': {\n              bgcolor: 'background.paper',\n              borderRadius: 3,\n              boxShadow: 2,\n              '& fieldset': {\n                borderColor: 'primary.main'\n              },\n              '&:hover fieldset': {\n                borderColor: 'primary.light'\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      alignItems: \"stretch\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            mb: 2,\n            height: '100%',\n            borderRadius: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Componentes disponibles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), availableComponents.map(c => /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"outlined\",\n            sx: {\n              my: 1\n            },\n            onClick: () => addStep(c.type),\n            children: c.label\n          }, c.type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 2,\n              mt: 2,\n              borderRadius: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Fases\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), Object.keys(stepsByPhase).map(phaseId => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                my: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                fullWidth: true,\n                variant: selectedPhase === phaseId ? 'contained' : 'outlined',\n                onClick: () => {\n                  setSelectedPhase(phaseId);\n                  setSelectedStepIdx(null);\n                },\n                children: `Fase ${phaseId}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 19\n              }, this), Object.keys(stepsByPhase).length > 1 && /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                color: \"error\",\n                sx: {\n                  minWidth: 32,\n                  ml: 1\n                },\n                onClick: () => {\n                  const newStepsByPhase = {\n                    ...stepsByPhase\n                  };\n                  delete newStepsByPhase[phaseId];\n                  const phaseKeys = Object.keys(newStepsByPhase);\n                  setStepsByPhase(newStepsByPhase);\n                  if (selectedPhase === phaseId) {\n                    setSelectedPhase(phaseKeys[0] || '1');\n                    setSelectedStepIdx(null);\n                  }\n                },\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 21\n              }, this)]\n            }, phaseId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(Button, {\n              fullWidth: true,\n              variant: \"contained\",\n              color: \"secondary\",\n              sx: {\n                mt: 2\n              },\n              onClick: addPhase,\n              children: \"+ A\\xF1adir Fase\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 5,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            minHeight: 400,\n            height: '100%',\n            borderRadius: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Steps de la Fase Seleccionada\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), Object.keys(stepsByPhase[selectedPhase] || {}).length === 0 && /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"text.secondary\",\n            children: \"A\\xF1ade componentes para comenzar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 77\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: Object.values(stepsByPhase[selectedPhase] || {}).sort((a, b) => a.order - b.order).map(step => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                my: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Paper, {\n                sx: {\n                  flex: 1,\n                  p: 1.2,\n                  background: selectedStepIdx === step.id ? 'rgba(33,150,243,0.25)' : '#23283a',\n                  color: selectedStepIdx === step.id ? '#fff' : '#e3e8ef',\n                  cursor: 'pointer',\n                  borderRadius: 2,\n                  boxShadow: selectedStepIdx === step.id ? '0 0 0 2px #2196f3' : 'none',\n                  transition: 'background 0.2s, color 0.2s',\n                  '&:hover': {\n                    background: selectedStepIdx === step.id ? 'rgba(33,150,243,0.32)' : 'rgba(144,202,249,0.12)',\n                    color: '#fff'\n                  }\n                },\n                onClick: () => selectStep(selectedPhase, step.id),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontWeight: 700\n                  },\n                  children: step.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: selectedStepIdx === step.id ? '#bbdefb' : '#b0b8c1',\n                    fontWeight: 400,\n                    marginLeft: 8\n                  },\n                  children: [\"(\", step.type, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                color: \"error\",\n                sx: {\n                  minWidth: 32,\n                  ml: 1\n                },\n                onClick: () => {\n                  const newSteps = {\n                    ...stepsByPhase[selectedPhase]\n                  };\n                  delete newSteps[step.id];\n                  setStepsByPhase({\n                    ...stepsByPhase,\n                    [selectedPhase]: newSteps\n                  });\n                  if (selectedStepIdx === step.id) setSelectedStepIdx(null);\n                },\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 19\n              }, this)]\n            }, step.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            height: '100%',\n            borderRadius: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Editor de Step\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), !selectedStepIdx ? /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"text.secondary\",\n            children: \"Selecciona un step para editar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(StepConfigEditor, {\n            type: (_stepsByPhase$selecte = stepsByPhase[selectedPhase]) === null || _stepsByPhase$selecte === void 0 ? void 0 : (_stepsByPhase$selecte2 = _stepsByPhase$selecte[selectedStepIdx]) === null || _stepsByPhase$selecte2 === void 0 ? void 0 : _stepsByPhase$selecte2.type,\n            config: (_stepsByPhase$selecte3 = stepsByPhase[selectedPhase]) === null || _stepsByPhase$selecte3 === void 0 ? void 0 : (_stepsByPhase$selecte4 = _stepsByPhase$selecte3[selectedStepIdx]) === null || _stepsByPhase$selecte4 === void 0 ? void 0 : _stepsByPhase$selecte4.config,\n            onSave: updateStepConfig\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      sx: {\n        mt: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 3,\n            mb: 2,\n            minHeight: 420,\n            boxShadow: 8,\n            border: '2px solid #1976d2',\n            borderRadius: 4,\n            background: '#f5faff',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'stretch'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            sx: {\n              mb: 2,\n              color: '#1976d2',\n              fontWeight: 700\n            },\n            children: \"Visualizaci\\xF3n gr\\xE1fica del flujo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flex: 1,\n              minHeight: 320\n            },\n            children: /*#__PURE__*/_jsxDEV(FlowView, {\n              steps: Object.values(stepsByPhase).flatMap(stepsObj => Object.values(stepsObj))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      sx: {\n        mt: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            borderRadius: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Vista previa JSON\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              fontSize: 12,\n              background: '#181c24',\n              color: '#e3e8ef',\n              padding: 8,\n              borderRadius: 4\n            },\n            children: JSON.stringify(generateJson(), null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gXJr6zD2jXQfPyHDBb13hEJFuoo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Container","Typography","Box","Button","Paper","Grid","TextField","FlowView","StepConfigEditor","jsxDEV","_jsxDEV","availableComponents","type","label","App","_s","_stepsByPhase$selecte","_stepsByPhase$selecte2","_stepsByPhase$selecte3","_stepsByPhase$selecte4","stepsByPhase","setStepsByPhase","selectedPhase","setSelectedPhase","selectedStepIdx","setSelectedStepIdx","jsonName","setJsonName","addPhase","phaseIds","Object","keys","map","Number","newId","length","Math","max","toString","addStep","steps","order","values","s","id","padStart","newStep","config","selectStep","phase","stepId","updateStepConfig","generateJson","name","fromEntries","entries","phaseId","step","maxWidth","sx","py","children","position","textAlign","mt","mb","left","top","width","height","transform","background","filter","opacity","zIndex","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","variant","fontWeight","color","textShadow","letterSpacing","display","justifyContent","alignItems","my","bgcolor","boxShadow","value","onChange","e","target","size","minWidth","input","borderColor","container","spacing","item","xs","md","p","c","fullWidth","onClick","ml","newStepsByPhase","phaseKeys","minHeight","sort","a","b","flex","cursor","transition","style","marginLeft","newSteps","onSave","border","flexDirection","flatMap","stepsObj","fontSize","padding","JSON","stringify","_c","$RefreshReg$"],"sources":["/Volumes/MacM2/repositorios/json-creator/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Typography, Box, Button, Paper, Grid, TextField } from '@mui/material';\nimport { Step, StepGroup, JsonTemplate } from './models';\nimport FlowView from './FlowView.tsx';\nimport StepConfigEditor from './StepConfigEditor.tsx';\n\n// Mock de steps/componentes disponibles\nconst availableComponents = [\n  { type: 'checkOracle', label: 'Check Oracle' },\n  { type: 'balanceAndPosition', label: 'Balance & Position' },\n  { type: 'sendYarc', label: 'Send Yarc' },\n  { type: 'manualCrossing', label: 'Manual Crossing' },\n  { type: 'alert', label: 'Alert' },\n  { type: 'cleanData', label: 'Clean Data' }\n];\n\nfunction App() {\n  // Estado para los steps agrupados por fase (steps: Record<string, Step[]>)\n  const [stepsByPhase, setStepsByPhase] = useState<Record<string, Record<string, Step>>>({\n    '1': {}\n  });\n  const [selectedPhase, setSelectedPhase] = useState<string>('1');\n  const [selectedStepIdx, setSelectedStepIdx] = useState<number | null>(null);\n  const [jsonName, setJsonName] = useState<string>('Nuevo JSON de Prueba');\n\n  // Añadir una nueva fase\n  const addPhase = () => {\n    const phaseIds = Object.keys(stepsByPhase).map(Number);\n    const newId = (phaseIds.length > 0 ? Math.max(...phaseIds) + 1 : 1).toString();\n    setStepsByPhase({ ...stepsByPhase, [newId]: [] });\n    setSelectedPhase(newId);\n    setSelectedStepIdx(null);\n  };\n\n  // Añadir un nuevo step a la fase seleccionada\n  const addStep = (type: string) => {\n    const steps = stepsByPhase[selectedPhase] || {};\n    // Obtener el siguiente orden y un id único\n    const order = Object.values(steps).length > 0 ? Math.max(...Object.values(steps).map(s => s.order)) + 1 : 1;\n    const id = `${order.toString().padStart(4, '0')}_${type}`;\n    const newStep: Step = { id, type, order, config: {} };\n    setStepsByPhase({\n      ...stepsByPhase,\n      [selectedPhase]: {\n        ...steps,\n        [id]: newStep\n      }\n    });\n  };\n\n  // Seleccionar step para editar\n  const selectStep = (phase: string, stepId: string) => {\n    setSelectedPhase(phase);\n    setSelectedStepIdx(stepId);\n  };\n\n  // Actualizar configuración de un step\n  const updateStepConfig = (config: any) => {\n    if (!selectedStepIdx) return;\n    const steps = stepsByPhase[selectedPhase] || {};\n    setStepsByPhase({\n      ...stepsByPhase,\n      [selectedPhase]: {\n        ...steps,\n        [selectedStepIdx]: {\n          ...steps[selectedStepIdx],\n          config\n        }\n      }\n    });\n  };\n\n  // Generar JSON final\n  const generateJson = (): JsonTemplate => ({\n    name: jsonName,\n    steps: Object.fromEntries(\n      Object.entries(stepsByPhase).map(([phaseId, steps]) => [\n        phaseId,\n        Object.fromEntries(\n          Object.entries(steps).map(([stepId, step]) => [\n            stepId,\n            step.config // Solo el objeto config plano, sin id/type/order/config\n          ])\n        )\n      ])\n    )\n  });\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n      <Box sx={{ position: 'relative', textAlign: 'center', mt: 2, mb: 3, py: 4 }}>\n        {/* Fondo difuminado */}\n        <Box\n          sx={{\n            position: 'absolute',\n            left: '50%',\n            top: '50%',\n            width: 500,\n            height: 120,\n            transform: 'translate(-50%, -50%)',\n            background: 'linear-gradient(90deg, #1976d2cc 0%, #42a5f5cc 100%)',\n            filter: 'blur(32px)',\n            opacity: 0.25,\n            zIndex: 0,\n            borderRadius: 8\n          }}\n        />\n        <Typography\n          variant=\"h3\"\n          sx={{\n            fontWeight: 700,\n            color: 'primary.main',\n            textShadow: '0 2px 12px rgba(25,118,210,0.15)',\n            letterSpacing: 1.5,\n            mb: 1,\n            position: 'relative',\n            zIndex: 1\n          }}\n        >\n          Generador de JSONs para Pruebas de Integración\n        </Typography>\n        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', my: 1, position: 'relative', zIndex: 1 }}>\n          <Box\n            sx={{\n              display: 'inline-block',\n              width: '100%',\n              maxWidth: 'min(100%, 700px)',\n              height: 5,\n              bgcolor: 'primary.main',\n              borderRadius: 3,\n              boxShadow: '0 2px 12px rgba(25,118,210,0.18)'\n            }}\n          />\n        </Box>\n        {/* Campo editable para el nombre */}\n        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', mt: 2 }}>\n          <TextField\n            label=\"Nombre del JSON\"\n            value={jsonName}\n            onChange={e => setJsonName(e.target.value)}\n            variant=\"outlined\"\n            size=\"small\"\n            sx={{\n              minWidth: 320,\n              input: { color: 'primary.main', fontWeight: 600, textAlign: 'center' },\n              label: { color: 'primary.light' },\n              '.MuiOutlinedInput-root': {\n                bgcolor: 'background.paper',\n                borderRadius: 3,\n                boxShadow: 2,\n                '& fieldset': { borderColor: 'primary.main' },\n                '&:hover fieldset': { borderColor: 'primary.light' }\n              }\n            }}\n          />\n        </Box>\n      </Box>\n      {/* Primer nivel: Componentes, Steps, Editor */}\n      <Grid container spacing={3} alignItems=\"stretch\">\n        <Grid item xs={12} md={3}>\n          <Paper sx={{ p: 2, mb: 2, height: '100%', borderRadius: 3 }}>\n            <Typography variant=\"h6\">Componentes disponibles</Typography>\n            {availableComponents.map(c => (\n              <Button key={c.type} fullWidth variant=\"outlined\" sx={{ my: 1 }} onClick={() => addStep(c.type)}>\n                {c.label}\n              </Button>\n            ))}\n            <Paper sx={{ p: 2, mt: 2, borderRadius: 3 }}>\n              <Typography variant=\"h6\">Fases</Typography>\n              {Object.keys(stepsByPhase).map(phaseId => (\n                <Box key={phaseId} sx={{ display: 'flex', alignItems: 'center', my: 1 }}>\n                  <Button fullWidth variant={selectedPhase === phaseId ? 'contained' : 'outlined'} onClick={() => { setSelectedPhase(phaseId); setSelectedStepIdx(null); }}>\n                    {`Fase ${phaseId}`}\n                  </Button>\n                  {Object.keys(stepsByPhase).length > 1 && (\n                    <Button size=\"small\" color=\"error\" sx={{ minWidth: 32, ml: 1 }} onClick={() => {\n                      const newStepsByPhase = { ...stepsByPhase };\n                      delete newStepsByPhase[phaseId];\n                      const phaseKeys = Object.keys(newStepsByPhase);\n                      setStepsByPhase(newStepsByPhase);\n                      if (selectedPhase === phaseId) {\n                        setSelectedPhase(phaseKeys[0] || '1');\n                        setSelectedStepIdx(null);\n                      }\n                    }}>X</Button>\n                  )}\n                </Box>\n              ))}\n              <Button fullWidth variant=\"contained\" color=\"secondary\" sx={{ mt: 2 }} onClick={addPhase}>\n                + Añadir Fase\n              </Button>\n            </Paper>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={5}>\n          <Paper sx={{ p: 2, minHeight: 400, height: '100%', borderRadius: 3 }}>\n            <Typography variant=\"h6\">Steps de la Fase Seleccionada</Typography>\n            {Object.keys(stepsByPhase[selectedPhase] || {}).length === 0 && <Typography color=\"text.secondary\">Añade componentes para comenzar</Typography>}\n            <Box>\n              {Object.values(stepsByPhase[selectedPhase] || {}).sort((a, b) => a.order - b.order).map((step) => (\n                <Box key={step.id} sx={{ display: 'flex', alignItems: 'center', my: 1 }}>\n                  <Paper\n                    sx={{\n                      flex: 1,\n                      p: 1.2,\n                      background: selectedStepIdx === step.id ? 'rgba(33,150,243,0.25)' : '#23283a',\n                      color: selectedStepIdx === step.id ? '#fff' : '#e3e8ef',\n                      cursor: 'pointer',\n                      borderRadius: 2,\n                      boxShadow: selectedStepIdx === step.id ? '0 0 0 2px #2196f3' : 'none',\n                      transition: 'background 0.2s, color 0.2s',\n                      '&:hover': {\n                        background: selectedStepIdx === step.id ? 'rgba(33,150,243,0.32)' : 'rgba(144,202,249,0.12)',\n                        color: '#fff'\n                      }\n                    }}\n                    onClick={() => selectStep(selectedPhase, step.id)}\n                  >\n                    <span style={{ fontWeight: 700 }}>{step.id}</span>\n                    <span style={{ color: selectedStepIdx === step.id ? '#bbdefb' : '#b0b8c1', fontWeight: 400, marginLeft: 8 }}>\n                      ({step.type})\n                    </span>\n                  </Paper>\n                  <Button size=\"small\" color=\"error\" sx={{ minWidth: 32, ml: 1 }} onClick={() => {\n                    const newSteps = { ...stepsByPhase[selectedPhase] };\n                    delete newSteps[step.id];\n                    setStepsByPhase({ ...stepsByPhase, [selectedPhase]: newSteps });\n                    if (selectedStepIdx === step.id) setSelectedStepIdx(null);\n                  }}>X</Button>\n                </Box>\n              ))}\n            </Box>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <Paper sx={{ p: 2, height: '100%', borderRadius: 3 }}>\n            <Typography variant=\"h6\">Editor de Step</Typography>\n            {!selectedStepIdx ? (\n              <Typography color=\"text.secondary\">Selecciona un step para editar</Typography>\n            ) : (\n              <StepConfigEditor\n                type={stepsByPhase[selectedPhase]?.[selectedStepIdx]?.type}\n                config={stepsByPhase[selectedPhase]?.[selectedStepIdx]?.config}\n                onSave={updateStepConfig}\n              />\n            )}\n          </Paper>\n        </Grid>\n      </Grid>\n      {/* Segundo nivel: Visualización gráfica del flujo */}\n      <Grid container spacing={3} sx={{ mt: 1 }}>\n        <Grid item xs={12}>\n          <Paper sx={{ p: 3, mb: 2, minHeight: 420, boxShadow: 8, border: '2px solid #1976d2', borderRadius: 4, background: '#f5faff', display: 'flex', flexDirection: 'column', alignItems: 'stretch' }}>\n            <Typography variant=\"h5\" sx={{ mb: 2, color: '#1976d2', fontWeight: 700 }}>Visualización gráfica del flujo</Typography>\n            <Box sx={{ flex: 1, minHeight: 320 }}>\n              <FlowView steps={Object.values(stepsByPhase).flatMap(stepsObj => Object.values(stepsObj))} />\n            </Box>\n          </Paper>\n        </Grid>\n      </Grid>\n      {/* Tercer nivel: Vista previa JSON */}\n      <Grid container spacing={3} sx={{ mt: 0 }}>\n        <Grid item xs={12}>\n          <Paper sx={{ p: 2, borderRadius: 3 }}>\n            <Typography variant=\"h6\">Vista previa JSON</Typography>\n            <pre style={{ fontSize: 12, background: '#181c24', color: '#e3e8ef', padding: 8, borderRadius: 4 }}>\n              {JSON.stringify(generateJson(), null, 2)}\n            </pre>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}